/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_SCHEMAS_V1_TELEMETRY_VEHICLE_TRACKER_SCHEMAS_TELEMETRY_PB_H_INCLUDED
#define PB_SCHEMAS_V1_TELEMETRY_VEHICLE_TRACKER_SCHEMAS_TELEMETRY_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _schemas_v1_telemetry_NetworkTelemetry {
    pb_callback_t network_type;
    pb_callback_t mobile_country_code;
    pb_callback_t mobile_network_code;
    pb_callback_t cell_id;
    int32_t signal_strength;
} schemas_v1_telemetry_NetworkTelemetry;

typedef struct _schemas_v1_telemetry_DeviceTelemetry {
    int64_t timestamp;
    int64_t uptime;
    float battery_percentage;
    double cpu_usage;
    double memory_usage;
    double disk_usage;
    bool has_network_telemetry;
    schemas_v1_telemetry_NetworkTelemetry network_telemetry;
} schemas_v1_telemetry_DeviceTelemetry;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define schemas_v1_telemetry_DeviceTelemetry_init_default {0, 0, 0, 0, 0, 0, false, schemas_v1_telemetry_NetworkTelemetry_init_default}
#define schemas_v1_telemetry_NetworkTelemetry_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define schemas_v1_telemetry_DeviceTelemetry_init_zero {0, 0, 0, 0, 0, 0, false, schemas_v1_telemetry_NetworkTelemetry_init_zero}
#define schemas_v1_telemetry_NetworkTelemetry_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define schemas_v1_telemetry_NetworkTelemetry_network_type_tag 1
#define schemas_v1_telemetry_NetworkTelemetry_mobile_country_code_tag 2
#define schemas_v1_telemetry_NetworkTelemetry_mobile_network_code_tag 3
#define schemas_v1_telemetry_NetworkTelemetry_cell_id_tag 4
#define schemas_v1_telemetry_NetworkTelemetry_signal_strength_tag 5
#define schemas_v1_telemetry_DeviceTelemetry_timestamp_tag 1
#define schemas_v1_telemetry_DeviceTelemetry_uptime_tag 2
#define schemas_v1_telemetry_DeviceTelemetry_battery_percentage_tag 3
#define schemas_v1_telemetry_DeviceTelemetry_cpu_usage_tag 4
#define schemas_v1_telemetry_DeviceTelemetry_memory_usage_tag 5
#define schemas_v1_telemetry_DeviceTelemetry_disk_usage_tag 6
#define schemas_v1_telemetry_DeviceTelemetry_network_telemetry_tag 7

/* Struct field encoding specification for nanopb */
#define schemas_v1_telemetry_DeviceTelemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    timestamp,         1) \
X(a, STATIC,   SINGULAR, INT64,    uptime,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    battery_percentage,   3) \
X(a, STATIC,   SINGULAR, DOUBLE,   cpu_usage,         4) \
X(a, STATIC,   SINGULAR, DOUBLE,   memory_usage,      5) \
X(a, STATIC,   SINGULAR, DOUBLE,   disk_usage,        6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  network_telemetry,   7)
#define schemas_v1_telemetry_DeviceTelemetry_CALLBACK NULL
#define schemas_v1_telemetry_DeviceTelemetry_DEFAULT NULL
#define schemas_v1_telemetry_DeviceTelemetry_network_telemetry_MSGTYPE schemas_v1_telemetry_NetworkTelemetry

#define schemas_v1_telemetry_NetworkTelemetry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   network_type,      1) \
X(a, CALLBACK, SINGULAR, STRING,   mobile_country_code,   2) \
X(a, CALLBACK, SINGULAR, STRING,   mobile_network_code,   3) \
X(a, CALLBACK, SINGULAR, STRING,   cell_id,           4) \
X(a, STATIC,   SINGULAR, INT32,    signal_strength,   5)
#define schemas_v1_telemetry_NetworkTelemetry_CALLBACK pb_default_field_callback
#define schemas_v1_telemetry_NetworkTelemetry_DEFAULT NULL

extern const pb_msgdesc_t schemas_v1_telemetry_DeviceTelemetry_msg;
extern const pb_msgdesc_t schemas_v1_telemetry_NetworkTelemetry_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define schemas_v1_telemetry_DeviceTelemetry_fields &schemas_v1_telemetry_DeviceTelemetry_msg
#define schemas_v1_telemetry_NetworkTelemetry_fields &schemas_v1_telemetry_NetworkTelemetry_msg

/* Maximum encoded size of messages (where known) */
/* schemas_v1_telemetry_DeviceTelemetry_size depends on runtime parameters */
/* schemas_v1_telemetry_NetworkTelemetry_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
